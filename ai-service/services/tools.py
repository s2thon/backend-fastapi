# Bu dosya, LangGraph ajanÄ±nÄ±n kullanabileceÄŸi tÃ¼m araÃ§larÄ± (@tool) tanÄ±mlar ve tek bir all_tools listesinde toplar.

from langchain_core.tools import tool

# Gerekli fonksiyonlarÄ± ve nesneleri diÄŸer modÃ¼llerden al
from .supabase_client import (
    get_price_info,
    get_stock_info,
    get_payment_amount,
    get_item_status,
    get_refund_status
)
from .vector_store import db # KullanÄ±ma hazÄ±r veritabanÄ± nesnesini al

@tool
def get_price_info_tool(product_name: str) -> str:
    """Bir Ã¼rÃ¼nÃ¼n fiyatÄ±nÄ± Ã¶ÄŸrenmek iÃ§in kullanÄ±lÄ±r."""
    return get_price_info(product_name)

@tool
def get_stock_info_tool(product_name: str) -> str:
    """Bir Ã¼rÃ¼nÃ¼n stokta kaÃ§ adet olduÄŸunu Ã¶ÄŸrenmek iÃ§in kullanÄ±lÄ±r."""
    return get_stock_info(product_name)

@tool
def get_payment_amount_tool(order_id: int) -> str:
    """Bir sipariÅŸin toplam Ã¶deme tutarÄ±nÄ± Ã¶ÄŸrenmek iÃ§in kullanÄ±lÄ±r."""
    return get_payment_amount(order_id)

@tool
def get_item_status_tool(order_id: int, product_name: str) -> str:
    """Belirli bir sipariÅŸteki bir Ã¼rÃ¼nÃ¼n durumunu Ã¶ÄŸrenmek iÃ§in kullanÄ±lÄ±r."""
    return get_item_status(order_id, product_name)

@tool
def get_refund_status_tool(order_id: int, product_name: str) -> str:
    """Belirli bir sipariÅŸteki bir Ã¼rÃ¼nÃ¼n iade durumunu Ã¶ÄŸrenmek iÃ§in kullanÄ±lÄ±r."""
    return get_refund_status(order_id, product_name)

@tool
def search_documents_tool(query: str) -> str:
    """
    KullanÄ±cÄ±nÄ±n iade politikasÄ±, kargo sÃ¼reci, ÅŸirket hakkÄ±ndaki genel bilgiler, 
    kullanÄ±m koÅŸullarÄ± veya sÄ±kÃ§a sorulan sorular (SSS) gibi genel bir sorusu olduÄŸunda kullanÄ±lÄ±r.
    ÃœrÃ¼n fiyatÄ±, stok durumu gibi spesifik veritabanÄ± bilgileri iÃ§in KULLANILMAZ.
    """
    if not db:
        return "Belge arama servisi ÅŸu anda kullanÄ±lamÄ±yor."
    
    print(f"ğŸ“„ Belge aramasÄ± (RAG) yapÄ±lÄ±yor: '{query}'")
    docs = db.similarity_search(query, k=3)
    
    if not docs:
        return "Belgelerde bu konuyla ilgili bir bilgi bulunamadÄ±."
        
    context = "\n\n---\n\n".join(doc.page_content for doc in docs)
    return f"Konuyla ilgili belgelerden ÅŸu bilgiler bulundu:\n\n{context}"

# DiÄŸer modÃ¼llerin kullanmasÄ± iÃ§in tÃ¼m araÃ§larÄ± tek bir listede topla
all_tools = [
    get_price_info_tool,
    get_stock_info_tool,
    get_payment_amount_tool,
    get_item_status_tool,
    get_refund_status_tool,
    search_documents_tool,
]