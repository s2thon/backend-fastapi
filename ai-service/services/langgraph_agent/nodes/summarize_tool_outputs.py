# app/nodes/summarize_tool_outputs.py

from langchain_core.messages import SystemMessage, ToolMessage
from ..graph_state import GraphState

def summarize_tool_outputs(state: GraphState):
    """
    AraÃ§lardan gelen Ã§Ä±ktÄ±larÄ± akÄ±llÄ±ca birleÅŸtirir ve bir sistem mesajÄ± oluÅŸturur.
    - BaÅŸarÄ±lÄ± sonuÃ§larÄ± listeler.
    - "BulunamadÄ±" veya "tÃ¼kendi" gibi bilgilendirici sonuÃ§larÄ± doÄŸru ÅŸekilde ekler.
    - Tavsiye aracÄ±ndan gelen boÅŸ sonuÃ§larÄ± tamamen gÃ¶rmezden gelir.
    - GerÃ§ek veritabanÄ± hatalarÄ±nÄ± belirtir.
    """
    messages = state["messages"]
    
    # Sadece bu dÃ¶ngÃ¼yle ilgili ToolMessage'larÄ± al
    # Geriye doÄŸru giderek tool_calls iÃ§eren son AIMessage'Ä± bul
    last_agent_message = next((msg for msg in reversed(messages) if hasattr(msg, 'tool_calls') and msg.tool_calls), None)
    if not last_agent_message:
        return {} # Ä°liÅŸkili araÃ§ Ã§aÄŸrÄ±sÄ± bulunamadÄ±
        
    tool_call_ids = {tc['id'] for tc in last_agent_message.tool_calls}
    # Sadece bu Ã§aÄŸrÄ±lara ait ToolMessage'larÄ± filtrele
    tool_outputs = [msg for msg in messages if isinstance(msg, ToolMessage) and msg.tool_call_id in tool_call_ids]
    
    if not tool_outputs:
        return {} # Ã–zetlenecek Ã§Ä±ktÄ± yok

    summary_lines = []
    for output in tool_outputs:
        content = output.content.strip() if output.content else ""
        tool_name = output.name

        # Orijinal kodunuzda bu araÃ§lar vardÄ±, isimleri kontrol edin
        if tool_name == 'get_recommendations_tool' and not content:
            continue  # Tavsiye aracÄ±ndan gelen boÅŸ cevabÄ± tamamen yoksay

        if "hatasÄ± oluÅŸtu" in content.lower():
            summary_lines.append(f"- '{tool_name}' kullanÄ±lÄ±rken bir sorun yaÅŸandÄ±.")
        elif content:
            summary_lines.append(f"- {content}")

    # Ã–zetlenecek anlamlÄ± bir bilgi yoksa, sonraki adÄ±mÄ± karÄ±ÅŸtÄ±rmamak iÃ§in boÅŸ dÃ¶n.
    if not summary_lines:
        return {}

    summary = "AraÃ§lardan ÅŸu bilgiler toplandÄ±:\n" + "\n".join(summary_lines)
    print(f"ğŸ“‹ AkÄ±llÄ± Ã–zetleme TamamlandÄ±:\n{summary}")

    return {"messages": [SystemMessage(content=summary)]}